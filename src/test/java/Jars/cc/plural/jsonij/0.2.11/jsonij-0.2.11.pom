
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>cc.plural</groupId>
    <artifactId>jsonij</artifactId>
    <packaging>jar</packaging>
    <version>0.2.11</version>
    <name>JSONiJ</name>
    <url>http://jsonij.plural.cc</url>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <!-- Publish also javadocs when releasing - required by Sonatype -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <scm>
        <connection>scm:git:git@bitbucket.org:jmarsden/jsonij.git</connection>
        <developerConnection>scm:git:git@bitbucket.org:jmarsden/jsonij.git</developerConnection>
        <url>git@bitbucket.org:jmarsden/jsonij.git</url>
    </scm>
    <developers>
        <developer>
            <id>jmarsden</id>
            <name>John W. Marsden</name>
            <email>jmarsden@plural.cc</email>
            <timezone>GMT+9.5</timezone>
            <roles>
            </roles>
        </developer>
    </developers>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <configLocation>config/sun_checks.xml</configLocation>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <distributionManagement>
            <!-- My project's Sonatype repository to be used by the release plugin -->
        <repository>
            <id>sonatype-nexus-staging</id>
            <name>Nexus Release Repository</name>
            <url>http://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>
        <snapshotRepository>
            <id>sonatype-nexus-snapshots</id>
            <name>My Nexus Snapshots Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>All files under Apache 2</comments>
        </license>
    </licenses>
    <description>JSONiJ - The simple and kickarse JSON implementation for Java. See http://jsonij.plural.cc for more information.
    </description>
    <profiles>
        <profile>
            <id>release-sign-artifacts</id>
            <activation>
                <property>
                    <!--
                    will be set by the release plugin upon performing mvn
                    release:perform
                    -->
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <gpg.keyname>9D24FFEE</gpg.keyname>	<!-- GPG Key ID to use for signing -->
            </properties>
            <build>
                <plugins>
                    <!--
                    Enable signing of the artifacts For gpg:sign-and-deploy-file it's
                    necessary to have a <server> with the repositoryId provided or
                    id="remote-repository" defined in settings.xml (it contains the
                    repository's login, psw) Signing: mvn gpg:sign-and-deploy-file
                    -DpomFile=target/myapp-1.0.pom -Dfile=target/myapp-1.0.jar
                    -Durl=http://oss.sonatype.org/content/repositories/malyvelky/
                    -DrepositoryId=sonatype_oss Note normally it uses the defaul key
                    but we can ovveride it by either setting the property gpg.keyname
                    (done in this POM) or by providing -Dkeyname=66AE163A on the
                    command line. OR directly w/ gpg (remove space in - -): gpg -u 66AE163A - -sign -
                    -detach-sign -a target/dbunit-embeddedderby-parenttest.jar Note:
                    "mvn gpg:sign" results in NPE with v 1.o-a.-4, use "mvn package
                    gpg:sign" instead; see the issue MGPG-18
                    -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.0-alpha-4</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Publish also javadocs when releasing - required by Sonatype -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!--
                    Release Plugin (Update version in POM before/after release, create
                    tag, deploy) to try: mvn release:prepare -DdryRun=true && mvn
                    release:clean to perform:

                    mvn release:prepare release:perform

                    Read http://nexus.sonatype.org/oss-repository-hosting.html#3 for
                    instructions on releasing to this project's Sonatype repository
                    -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                        <version>2.0-beta-7</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>include-sources</id>
            <build>
                <resources>
                    <resource>
                        <targetPath>/</targetPath>
                        <filtering>true</filtering>
                        <directory>src/main/java</directory>
                        <includes>
                            <include>**/*.java</include>
                        </includes>
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>
</project>
